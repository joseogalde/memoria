% RC Payload Frequency - CmdArgument relation validation
% Original Plots made by: http://blogs.mathworks.com/loren/2007/12/11/making-pretty-graphs/
%% Generate model and validation data
close all;
clear all;
fModel = logspace(0,5, 200);
cmdModel = zeros(size(fModel));
for i=1:length(cmdModel)
    cmdModel(i) =  payloadCommandValue( fModel(i) ) ;
end

[m, n, dtSeconds, cmdValueReal] = payloadLinearFit(pwd);
frealHz = 1./ dtSeconds;
fittedValue = zeros(size(frealHz));
for i=1:length(frealHz)
    fittedValue(i) =  payloadCommandValue( frealHz(i) );
end

%% Compute Regression Efficency
xresid = cmdValueReal - fittedValue;
SSresid = sum(xresid.^2);
SStotal = (length(cmdValueReal)-1) * var(cmdValueReal);
rsq = 1 - SSresid/SStotal;

%% Plots
figure('units','normalized','outerposition',[0 0 1 1]);
hold on;
grid on;
colorOrder = get(gca, 'ColorOrder');
modelColor = colorOrder(mod(length(get(gca, 'Children')), size(colorOrder, 1))+2, :);
hModel = line(log10(fModel), log10(cmdModel) );
hData  = line(log10(frealHz), log10(cmdValueReal));

set(hData                         , ...
    'LineStyle'       , 'none'      );
set(hModel                        , ...
    'LineStyle'       , '-'        , ...
    'Color'           , 'b'         );
set(hData                         , ...
    'Marker'          , 'o'         , ...
    'MarkerSize'      , 6           , ...
    'MarkerEdgeColor' , 'none'      , ...
    'MarkerFaceColor' , [1 .2 .2] );
set(hModel                        , ...
    'LineWidth'       , 1.5         );

hTitle  = title ('Input Noise Frequency relation with Command Value');
hXLabel = xlabel('log10(F_{Hz})');
hYLabel = ylabel('log10(Value)');
hLegend = legend([hData, hModel], 'Validation Data','Model (\it{ cmd \propto 1/f})' );
div = n/m;
% equation = strcat('cmd = (1/f_{Hz}-',num2str(n),')/(',num2str(m),')');
equation = 'value = 1 / (f_{Hz} \cdot 1.6 \cdot 10^{-5}) - 0.2723';
textX = 0.5;
textY = 0.5;
text(textX,textY,equation,'Units','normalized','Color','b',...
    'FontSize',16,'HorizontalAlignment','left');
% set( gca                       , ...
%     'FontName'   , 'Helvetica' );
% set([hTitle, hXLabel, hYLabel], ...
%     'FontName'   , 'AvantGarde');
% set([hLegend, gca]             , ...
%     'FontSize'   , 8           );
% set([hXLabel, hYLabel]  , ...
%     'FontSize'   , 10          );
% set( hTitle                    , ...
%     'FontSize'   , 12          , ...
%     'FontWeight' , 'bold'      );
%
% set(gca, ...
%   'Box'         , 'off'     , ...
%   'TickDir'     , 'out'     , ...
%   'TickLength'  , [.02 .02] , ...
%   'XMinorTick'  , 'on'      , ...
%   'YMinorTick'  , 'on'      , ...
%   'YGrid'       , 'on'      , ...
%   'XColor'      , [.3 .3 .3], ...
%   'YColor'      , [.3 .3 .3], ...
%   'YTick'       , 0:500:2500, ...
%   'LineWidth'   , 1         );
